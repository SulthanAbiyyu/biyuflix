{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Grouplogo.png","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","clicked","window","location","href","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substring","Navbar","show","handleShow","addEventListener","scrollY","removeEventListener","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d02b774.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => setTrailerUrl(\"D7npse9n-Yw\"));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            onClick={() => handleClick(movie)}\r\n            key={movie.id}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${isLargeRow ? movie?.poster_path : movie?.backdrop_path || movie?.poster_path}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const APIKEY = \"a51850c44d1acbd088348c5ecd0ff93c\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./request\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\r\n  }\r\n  function clicked() {\r\n    window.location.href = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\";\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\" onClick={clicked}>\r\n            Play\r\n          </button>\r\n          <button className=\"banner_button\" onClick={clicked}>\r\n            My List\r\n          </button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export default __webpack_public_path__ + \"static/media/Grouplogo.85f5d073.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport logo from \"./Grouplogo.png\";\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", null);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img src={logo} alt=\"Netflix Logo\" className=\"nav_logo\" />\r\n      <img src=\"https://i.pinimg.com/originals/bd/ee/4c/bdee4c328550aaf21aa9f43fd19e2136.png\" alt=\"Netflix Avatar\" className=\"nav_avatar\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./request\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Banner />\n      <Row title=\"BIYUFLIX ORIGINALS (trailer banyak yg g kena wkwk D:)\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Aowkaoawko Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"👻 Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"💖 Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}